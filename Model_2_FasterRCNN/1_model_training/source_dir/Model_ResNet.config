model {
  faster_rcnn {
    num_classes: 3  # Number of classes in the dataset

    # Image Resizing Configuration
    image_resizer {
      keep_aspect_ratio_resizer {
        min_dimension: 640
        max_dimension: 640
        pad_to_max_dimension: true  # Padding to ensure the image matches max dimensions
      }
    }

    # Feature Extractor Configuration using ResNet50
    feature_extractor {
      type: 'faster_rcnn_resnet50_keras'  # ResNet50 as feature extractor for Faster R-CNN
      batch_norm_trainable: true  # Allow batch normalization layers to be trainable
    }

    # Anchor Generator for the first stage
    first_stage_anchor_generator {
      grid_anchor_generator {
        scales: [0.25, 0.5, 1.0, 2.0]  # Scales for anchor boxes
        aspect_ratios: [0.5, 1.0, 2.0]  # Aspect ratios for anchor boxes
        height_stride: 16  # Stride of the anchor boxes along the height
        width_stride: 16  # Stride of the anchor boxes along the width
      }
    }

    # Box Predictor Configuration for the first stage
    first_stage_box_predictor_conv_hyperparams {
      op: CONV  # Operation type for convolution
      regularizer {
        l2_regularizer {
          weight: 0.0  # Regularization weight for convolution
        }
      }
      initializer {
        truncated_normal_initializer {
          stddev: 0.01  # Standard deviation for the weight initializer
        }
      }
    }

    # First stage Non-Max Suppression (NMS) parameters
    first_stage_nms_score_threshold: 0.0  # Score threshold for NMS
    first_stage_nms_iou_threshold: 0.7  # IoU threshold for NMS
    first_stage_max_proposals: 300  # Maximum number of proposals after the first stage

    # Loss weights for the first stage
    first_stage_localization_loss_weight: 2.0
    first_stage_objectness_loss_weight: 1.0

    # Region of Interest (ROI) cropping parameters
    initial_crop_size: 14
    maxpool_kernel_size: 2
    maxpool_stride: 2

    # Box Predictor Configuration for the second stage
    second_stage_box_predictor {
      mask_rcnn_box_predictor {  # Using Mask R-CNN box predictor with Faster R-CNN
        use_dropout: false  # Disable dropout
        dropout_keep_probability: 1.0  # Keep dropout probability
        fc_hyperparams {
          op: FC  # Fully connected layer operation
          regularizer {
            l2_regularizer {
              weight: 0.0  # Regularization weight for fully connected layer
            }
          }
          initializer {
            variance_scaling_initializer {
              factor: 1.0
              uniform: true
              mode: FAN_AVG
            }
          }
        }
        share_box_across_classes: true  # Share box predictor across classes
      }
    }

    # Post-processing for the second stage
    second_stage_post_processing {
      batch_non_max_suppression {
        score_threshold: 0.0  # Score threshold for NMS in the second stage
        iou_threshold: 0.6  # IoU threshold for NMS in the second stage
        max_detections_per_class: 100  # Maximum detections per class
        max_total_detections: 300  # Maximum total detections
      }
      score_converter: SOFTMAX  # Convert scores to probabilities
    }

    # Loss weights for the second stage
    second_stage_localization_loss_weight: 2.0
    second_stage_classification_loss_weight: 1.0

    # Additional settings
    use_static_shapes: true  # Use static shapes for improved performance
    use_matmul_crop_and_resize: true  # Use matmul crop and resize for efficiency
    clip_anchors_to_image: true  # Clip anchors to image boundaries
    use_static_balanced_label_sampler: true  # Use static balanced label sampler
    use_matmul_gather_in_matcher: true  # Use matmul gather in matcher
  }
}

# Training configuration
train_config: {
  batch_size: 8  # Batch size for training
  sync_replicas: true  # Synchronize replicas during training
  startup_delay_steps: 0  # Delay before starting training
  replicas_to_aggregate: 8  # Number of replicas to aggregate
  num_steps: 300000  # Number of training steps

  optimizer {
    momentum_optimizer: {
      learning_rate: {
        cosine_decay_learning_rate {
          learning_rate_base: .08  # Base learning rate
          total_steps: 300000  # Total number of steps for cosine decay
          warmup_learning_rate: .026666  # Learning rate during warmup
          warmup_steps: 25000  # Number of warmup steps
        }
      }
      momentum_optimizer_value: 0.9  # Momentum value for the optimizer
    }
    use_moving_average: false  # Do not use moving average
  }

  fine_tune_checkpoint_version: V2  # Version of the fine-tune checkpoint
  fine_tune_checkpoint: "checkpoint/ckpt-0"  # Path to the fine-tune checkpoint
  fine_tune_checkpoint_type: "detection"  # Type of checkpoint

  data_augmentation_options {
    random_horizontal_flip {
    }
  }
  data_augmentation_options {
    random_crop_image {
      min_object_covered: 0.0  # Minimum fraction of image covered by objects
      min_aspect_ratio: 0.75  # Minimum aspect ratio of objects
      max_aspect_ratio: 3.0  # Maximum aspect ratio of objects
      min_area: 0.75  # Minimum area of cropped image
      max_area: 1.0  # Maximum area of cropped image
      overlap_thresh: 0.0  # Overlap threshold for cropping
    }
  }
  
  max_number_of_boxes: 100  # Maximum number of boxes per image
  unpad_groundtruth_tensors: false  # Do not unpad ground truth tensors
}

# Input reader configuration for training
train_input_reader: {
  label_map_path: "/opt/ml/input/data/train/label_map.pbtxt"  # Path to label map
  tf_record_input_reader {
    input_path: "/opt/ml/input/data/train/*.tfrecord"  # Path to TFRecord files
  }
}

# Evaluation configuration
eval_config: {
  metrics_set: "coco_detection_metrics"  # Metrics set for evaluation
  use_moving_averages: false  # Do not use moving averages
}

# Input reader configuration for evaluation
eval_input_reader: {
  label_map_path: "/opt/ml/input/data/val/label_map.pbtxt"  # Path to label map for evaluation
  shuffle: false  # Do not shuffle evaluation data
  num_epochs: 1  # Number of epochs for evaluation
  tf_record_input_reader {
    input_path: "/opt/ml/input/data/val/*.tfrecord"  # Path to TFRecord files for evaluation
  }
}
